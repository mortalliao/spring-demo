<?xml version="1.0" encoding="utf-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       	 				   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       	 				   http://www.springframework.org/schema/context
       	 				   http://www.springframework.org/schema/context/spring-context-4.2.xsd">
      
      
    <!-- 配置加载属性文件产生属性占位符 -->
	<context:property-placeholder
		location="classpath:jdbc1.properties,file:src/jdbc2.properties" />
      
    <!-- 配置加载全局的属性文件产生属性占位符 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	     <!-- 指定单个属性文件的位置 -->
	     <!-- <property name="location" value="jdbc.properties"/> -->
	
	     <!-- 指定多个属性文件的位置 -->
	     <!-- <property name="locations">
	     	<array>
	     		<value>jdbc1.properties</value>
	     		<value>jdbc2.properties</value>
	     	</array>
	     </property> -->
	     <!-- <property name="locations" value="#{new String[]{'jdbc1.properties', 'jdbc2.properties'}}"/> -->
	</bean>

	<bean id="testDao" class="org.spring.learning.properties.TestDao" p:driverClass="${driverClass}"
		p:jdbcUrl="${jdbcUrl}" p:user="${user}" p:password="${password}" />

	<bean id="testService" class="org.spring.learning.properties.TestService" p:user="${user}" />

</beans>